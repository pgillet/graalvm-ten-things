<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- Spring Native 0.10.3 only supports Spring Boot 2.5.4, 
	so change the version if necessary. -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.5.4</version>
		<relativePath/>
		<!-- lookup parent from repository -->
	</parent>
	<groupId>com.example</groupId>
	<artifactId>rest-service-complete</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>rest-service-complete</name>
	<description>Demo project for Spring Boot</description>
	<properties>
		<java.version>1.8</java.version>
	</properties>

	<!-- Configure your build to include the required repository for the 
	spring-native dependency, as follows: -->
	<repositories>
		<repository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
		</repository>
	</repositories>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Add the Spring Native dependency -->
		<!-- org.springframework.experimental:spring-native provides native 
		configuration APIs like @NativeHint as well as other mandatory classes 
		required to run a Spring application as a native image. 
		You need to specify it explicitly only with Maven. -->
		<dependency>
			<groupId>org.springframework.experimental</groupId>
			<artifactId>spring-native</artifactId>
			<version>0.10.3</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- To test the native application -->
		<dependency>
			<groupId>org.graalvm.buildtools</groupId>
			<artifactId>junit-platform-native</artifactId>
			<version>0.9.3</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- The Spring AOT plugin also requires a dedicated plugin repository -->
	<pluginRepositories>
		<pluginRepository>
			<id>spring-release</id>
			<name>Spring release</name>
			<url>https://repo.spring.io/release</url>
		</pluginRepository>
	</pluginRepositories>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<!-- Add the Spring AOT plugin -->
			<!-- The Spring AOT plugin performs ahead-of-time transformations required 
			to improve native image compatibility and footprint. -->
			<plugin>
				<groupId>org.springframework.experimental</groupId>
				<artifactId>spring-aot-maven-plugin</artifactId>
				<version>0.10.3</version>
				<executions>
					<execution>
						<id>test-generate</id>
						<goals>
							<goal>test-generate</goal>
						</goals>
					</execution>
					<execution>
						<id>generate</id>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<!-- Add the native build tools plugin -->
	<!-- GraalVM provides Gradle and Maven plugins to invoke the native image 
	compiler from your build. The following example adds a native profile that 
	triggers the plugin during the package phase: -->
	<profiles>
		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<version>0.9.3</version>
						<executions>
							<execution>
								<id>test-native</id>
								<goals>
									<goal>test</goal>
								</goals>
								<phase>test</phase>
							</execution>
							<execution>
								<id>build-native</id>
								<goals>
									<goal>build</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
						<configuration>
							<!-- ... -->
						</configuration>
					</plugin>
					<!-- Avoid a clash between Spring Boot repackaging and native-maven-plugin -->
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<classifier>exec</classifier>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
